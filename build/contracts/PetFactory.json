{
  "contractName": "PetFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "petOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "petId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "status",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nextFeed",
          "type": "uint256"
        }
      ],
      "name": "LogPetCheck",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "petOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "petId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "status",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nextFeed",
          "type": "uint256"
        }
      ],
      "name": "LogPetFeed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "petOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "petId",
          "type": "uint256"
        }
      ],
      "name": "LogPetGenerate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "petOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "petId",
          "type": "uint256"
        }
      ],
      "name": "LogPetKill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "generatePet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "feedPet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "checkPetInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "petStatus",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "nextFeed",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"petOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nextFeed\",\"type\":\"uint256\"}],\"name\":\"LogPetCheck\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"petOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nextFeed\",\"type\":\"uint256\"}],\"name\":\"LogPetFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"petOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"}],\"name\":\"LogPetGenerate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"petOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"}],\"name\":\"LogPetKill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkPetInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"petStatus\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"nextFeed\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"feedPet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"generatePet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeMint(address,uint256)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"safeMint(address,uint256,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check.\",\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PetFactory.sol\":\"PetFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Pet.sol\":{\"keccak256\":\"0xe4a067cc06397aa01ca0ac85bab18af4b7512086f14d45af55d06704f11396c8\",\"urls\":[\"bzz-raw://d3a7f258acc224f0a27a4096e4412ab0480b91941feaeb0b0c2e2b3d6c4a4ace\",\"dweb:/ipfs/QmWpVf2VDq1vSe4w7K9E7VKJQhoYpVunqdm9ZzC5AmzFsR\"]},\"project:/contracts/PetFactory.sol\":{\"keccak256\":\"0x7f022c58f073ffb20be5da58277dddeffe8323e6d0edb9932a6d1947d044778d\",\"urls\":[\"bzz-raw://166dc07f4fa1bdd6a41fea7879b7f94570fac016d1bcfdac54bc52c5341c0120\",\"dweb:/ipfs/QmYVj1mivi3NeP6c92YB1Z8dyXgkSXtp88Witrpo8Vh7cU\"]},\"project:/node_modules/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"project:/node_modules/@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"project:/node_modules/@openzeppelin/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzz-raw://badf338a5e22c8658c01fe2ce89b487d9dbf6d2d9d5eb49df7415383e2498765\",\"dweb:/ipfs/QmP5aMkvFwMJyuQjKE8ADh5tkWYqonb4KjgkAjgYEVVFAv\"]},\"project:/node_modules/@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"project:/node_modules/@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"project:/node_modules/@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"project:/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1a1c02bc2487c763ad240f6b6440ec9dcb84870879aea3ed2a6b9cd300b637c7\",\"urls\":[\"bzz-raw://e6351696020fecf1c1b09437a2961cbdc3e1579238a9573b8577b58af463eeb6\",\"dweb:/ipfs/QmTg7UxUcuENko38JL2Pb2aqXkWgqW1xPDbJwmfo3RVrrV\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\":{\"keccak256\":\"0xa9a5f3d09b6258e143a6f697b640b4d05e602ee4b6ea9b92e504c02f3e7d927a\",\"urls\":[\"bzz-raw://0055925bef49cb5ac496fdfb40dbd6d411e1c9ba7196542869ac90d9d6b979c6\",\"dweb:/ipfs/QmaYWc8vErzMW387m3xYAErqeBcanXTvSny8PTjgqiB8hj\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x28f4e41b86db783cd8daf9fdec839ce5930332b60f6dc9ac4992dfb584997e79\",\"urls\":[\"bzz-raw://6f1b545ec9e1f0284e86ddd4ffff353e1ab5e026bbbfaa2a5d2d791c39d7afd7\",\"dweb:/ipfs/Qmf9rVfj6LreiE7NHkkT1S7eLbSQDDY1gKd9XWERx2AN7W\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x307231237999e19b618a03e7ecff1cee2a189dd019ebd203e5e43a63a7ac8aa3\",\"urls\":[\"bzz-raw://9a169446f024a24c3e5146cbeefea6be3bbbe9ba836f98f9d0c64af9f10773c4\",\"dweb:/ipfs/QmWibincTepM31suKeF6bd3shbPGjc9E7uULaXQBY1eNX5\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xe454aab4894511c610fb28e63e212608004921c10dfbffaf0b0e18a2c3b204eb\",\"urls\":[\"bzz-raw://cbb33c4aa1ba8470e389a79702b1b0450c03acd0e9471ed3ae5d566a958d36a4\",\"dweb:/ipfs/QmXryp8Ncftr8WYt7vWwoFQVKnbxtQ7dQBHzfzgWWYGisK\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/ERC721Mintable.sol\":{\"keccak256\":\"0xdd9d2d0f7fac88b5704044983443c052810b397e6383535711a9162302c32d03\",\"urls\":[\"bzz-raw://3082c4ead86756c5aa19e6734117394dc230d4f92c16537a402dfb57579e5d72\",\"dweb:/ipfs/QmbGubkvZ8FouoNjrBGsVmJskPXYcYXa1MkWCktwxbd4tU\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzz-raw://0f314963ab26fb65c6f364d57900f0f1aa8f6aeb4396e327e5e5c646815f060e\",\"dweb:/ipfs/Qmf6eSUtRUF4YDxGyhQq7TVDYzuHcYEvk9Us3RVy5iZQVH\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzz-raw://e23af54444d2dbfae58895339eb7b189e1ba5d0b7abde63716e7ef7da23b2fde\",\"dweb:/ipfs/QmZva7dE1SMd1yyizzc6ivSoBXXwpNveLV7iFNATNpq68Y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzz-raw://a8024c00e34efaf328f9592e76823c79f25fa0f6006bdf4a1e7fea204afd4773\",\"dweb:/ipfs/QmZns9jTr7843njq3J2iL2LLoWXK5mdzN1bDGd9GL3ahhD\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620001485760003560e01c80638832e6e311620000bd578063aa271e1a116200007b578063aa271e1a1462000760578063ac15910214620007bf578063b88d4fde14620007df578063e985e9c514620008ea578063fbfabac414620009695762000148565b80638832e6e3146200054e578063983b2d561462000651578063986502751462000698578063a144819414620006a4578063a22cb465146200070d5762000148565b806342842e0e116200010b57806342842e0e146200035157806342966c6814620003c25780635081fd1414620003f35780636352211e146200048257806370a0823114620004f35762000148565b806301ffc9a7146200014d578063081812fc14620001b5578063095ea7b3146200022657806323b872dd146200027757806340c10f1914620002e8575b600080fd5b6200019b600480360360208110156200016557600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506200099a565b604051808215151515815260200191505060405180910390f35b620001e460048036036020811015620001cd57600080fd5b810190808035906020019092919050505062000a01565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000275600480360360408110156200023e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000aa0565b005b620002e6600480360360608110156200028f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000c94565b005b62000337600480360360408110156200030057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000d12565b604051808215151515815260200191505060405180910390f35b620003c0600480360360608110156200036957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000d95565b005b620003f160048036036020811015620003da57600080fd5b810190808035906020019092919050505062000db7565b005b620003fd62000e31565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156200044557808201518184015260208101905062000428565b50505050905090810190601f168015620004735780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b620004b1600480360360208110156200049a57600080fd5b810190808035906020019092919050505062001109565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000538600480360360208110156200050b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620011d3565b6040518082815260200191505060405180910390f35b62000637600480360360608110156200056657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115620005ae57600080fd5b820183602082011115620005c157600080fd5b80359060200191846001830284011164010000000083111715620005e457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050620012ac565b604051808215151515815260200191505060405180910390f35b62000696600480360360208110156200066957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001331565b005b620006a2620013aa565b005b620006f360048036036040811015620006bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620013c0565b604051808215151515815260200191505060405180910390f35b6200075e600480360360408110156200072557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505062001443565b005b620007a5600480360360208110156200077857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001602565b604051808215151515815260200191505060405180910390f35b620007c962001621565b6040518082815260200191505060405180910390f35b620008e860048036036080811015620007f757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156200085f57600080fd5b8201836020820111156200087257600080fd5b803590602001918460018302840111640100000000831117156200089557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505062001757565b005b6200094f600480360360408110156200090257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620017d7565b604051808215151515815260200191505060405180910390f35b62000998600480360360208110156200098157600080fd5b81019080803590602001909291905050506200186b565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600062000a0e8262001c4e565b62000a65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180620058d8602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600062000aad8262001109565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000b36576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806200594f6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1662000b5762001cc0565b73ffffffffffffffffffffffffffffffffffffffff16148062000b8b575062000b8a8162000b8462001cc0565b620017d7565b5b62000be2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180620057fc6038913960400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b62000ca962000ca262001cc0565b8262001cc8565b62000d00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180620059706031913960400191505060405180910390fd5b62000d0d83838362001dc8565b505050565b600062000d2862000d2262001cc0565b62001602565b62000d7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180620058876030913960400191505060405180910390fd5b62000d8b83836200202f565b6001905092915050565b62000db28383836040518060200160405280600081525062001757565b505050565b62000dcc62000dc562001cc0565b8262001cc8565b62000e23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180620059c66030913960400191505060405180910390fd5b62000e2e816200224d565b50565b6060600042600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154101562000e8b5762000e8a62002266565b5b6000600181111562000e9957fe5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16600181111562000ef557fe5b141562000f3a576040518060400160405280600581526020017f416c697665000000000000000000000000000000000000000000000000000000815250915062000f73565b6040518060400160405280600481526020017f446561640000000000000000000000000000000000000000000000000000000081525091505b3373ffffffffffffffffffffffffffffffffffffffff167f2c4a6eff40f9d8bf60e810b3fe9d04d04129f1709a81258e39ad37853506ddba600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015484600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156200108057808201518184015260208101905062001063565b50505050905090810190601f168015620010ae5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a281600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154915091509091565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620011ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806200585e6029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200125c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018062005834602a913960400191505060405180910390fd5b620012a5600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002062002320565b9050919050565b6000620012c2620012bc62001cc0565b62001602565b62001319576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180620058876030913960400191505060405180910390fd5b620013268484846200232e565b600190509392505050565b620013456200133f62001cc0565b62001602565b6200139c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180620058876030913960400191505060405180910390fd5b620013a781620023a5565b50565b620013be620013b862001cc0565b62002401565b565b6000620013d6620013d062001cc0565b62001602565b6200142d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180620058876030913960400191505060405180910390fd5b6200143983836200245d565b6001905092915050565b6200144d62001cc0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620014ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060046000620014fe62001cc0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16620015ad62001cc0565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006200161a8260056200247d90919063ffffffff16565b9050919050565b600080600754905060016007600082825401925050819055506200164462002eae565b818160000181815250506000816020019060018111156200166157fe5b908160018111156200166f57fe5b815250504281604001818152505080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690836001811115620016ec57fe5b021790555060408201518160020155905050818160400151604051620017129062002edb565b8083815260200182815260200192505050604051809103906000f08015801562001740573d6000803e3d6000fd5b50506200174e3383620013c0565b50819250505090565b6200176c6200176562001cc0565b8362001cc8565b620017c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180620059706031913960400191505060405180910390fd5b620017d1848484846200255d565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600180141562001a0b576200187f62002eae565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166001811115620018f257fe5b6001811115620018fe57fe5b8152602001600282015481525050905062093a808201816040018181525050600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160006101000a81549060ff02191690556002820160009055505080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690836001811115620019f257fe5b0217905550604082015181600201559050505062001a16565b62001a1562002266565b5b60606000600181111562001a2657fe5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16600181111562001a8257fe5b141562001ac7576040518060400160405280600581526020017f416c697665000000000000000000000000000000000000000000000000000000815250905062001b00565b6040518060400160405280600481526020017f446561640000000000000000000000000000000000000000000000000000000081525090505b3373ffffffffffffffffffffffffffffffffffffffff167f74e7ea84d3b7bbe97190375606731dea28e96c3e17407efe45f2604c46e6b35a600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015483600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101562001c0d57808201518184015260208101905062001bf0565b50505050905090810190601f16801562001c3b5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a25050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b600062001cd58262001c4e565b62001d2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180620057d0602c913960400191505060405180910390fd5b600062001d398362001109565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148062001dab57508373ffffffffffffffffffffffffffffffffffffffff1662001d938462000a01565b73ffffffffffffffffffffffffffffffffffffffff16145b8062001dbf575062001dbe8185620017d7565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1662001dea8262001109565b73ffffffffffffffffffffffffffffffffffffffff161462001e58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180620059266029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562001ee0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180620057ac6024913960400191505060405180910390fd5b62001eeb81620025d5565b62001f34600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002062002694565b62001f7d600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020620026b9565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620020d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b620020de8162001c4e565b1562002152576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620021ed600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020620026b9565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b620022636200225c8262001109565b82620026cf565b50565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908360018111156200230d57fe5b02179055506200231d8162000db7565b50565b600081600001549050919050565b6200233a83836200202f565b62002349600084848462002866565b620023a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806200577a6032913960400191505060405180910390fd5b505050565b620023bb81600562002bb390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6200241781600562002c9190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b620024798282604051806020016040528060008152506200232e565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562002506576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620059046022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6200256a84848462001dc8565b620025788484848462002866565b620025cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806200577a6032913960400191505060405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620026915760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b620026ae6001826000015462002d5290919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b8173ffffffffffffffffffffffffffffffffffffffff16620026f18262001109565b73ffffffffffffffffffffffffffffffffffffffff16146200275f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180620059a16025913960400191505060405180910390fd5b6200276a81620025d5565b620027b3600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002062002694565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000620028898473ffffffffffffffffffffffffffffffffffffffff1662002d9e565b62002898576001905062002bab565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b620028de62001cc0565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156200299057808201518184015260208101905062002973565b50505050905090810190601f168015620029be5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831062002a58578051825260208201915060208101905060208303925062002a33565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811462002abc576040519150601f19603f3d011682016040523d82523d6000602084013e62002ac1565b606091505b50915091508162002b325760008151111562002ae05780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806200577a6032913960400191505060405180910390fd5b600081806020019051602081101562002b4a57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b62002bbf82826200247d565b1562002c33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b62002c9d82826200247d565b62002cf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180620058b76021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600062002d9683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525062002dea565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801562002de157506000801b8214155b92505050919050565b600083831115829062002e9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562002e5f57808201518184015260208101905062002e42565b50505050905090810190601f16801562002e8d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6040518060600160405280600081526020016000600181111562002ece57fe5b8152602001600081525090565b6128908062002eea8339019056fe60806040523480156200001157600080fd5b506040516200289038038062002890833981810160405260408110156200003757600080fd5b8101908080519060200190929190805190602001909291905050506040518060400160405280600381526020017f50657400000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f50455400000000000000000000000000000000000000000000000000000000008152508181620000d86301ffc9a760e01b6200019a60201b60201c565b620000f06380ac58cd60e01b6200019a60201b60201c565b6200010863780e9d6360e01b6200019a60201b60201c565b816009908051906020019062000120929190620002a3565b5080600a908051906020019062000139929190620002a3565b5062000152635b5e139f60e01b6200019a60201b60201c565b5050505081600d600001819055506000600d60010160006101000a81548160ff021916908360018111156200018357fe5b021790555080600d60020181905550505062000352565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002e657805160ff191683800117855562000317565b8280016001018555821562000317579182015b8281111562000316578251825591602001919060010190620002f9565b5b5090506200032691906200032a565b5090565b6200034f91905b808211156200034b57600081600090555060010162000331565b5090565b90565b61252e80620003626000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80635f0e8dd0116100a257806395d89b411161007157806395d89b41146105e0578063a22cb46514610663578063b88d4fde146106b3578063c87b56dd146107b8578063e985e9c51461085f57610116565b80635f0e8dd01461045d5780636352211e146104975780636c0360eb1461050557806370a082311461058857610116565b806318160ddd116100e957806318160ddd146102bf57806323b872dd146102dd5780632f745c591461034b57806342842e0e146103ad5780634f6ccce71461041b57610116565b806301ffc9a71461011b57806306fdde0314610180578063081812fc14610203578063095ea7b314610271575b600080fd5b6101666004803603602081101561013157600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506108db565b604051808215151515815260200191505060405180910390f35b610188610942565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c85780820151818401526020810190506101ad565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61022f6004803603602081101561021957600080fd5b81019080803590602001909291905050506109e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102bd6004803603604081101561028757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a7f565b005b6102c7610c66565b6040518082815260200191505060405180910390f35b610349600480360360608110156102f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c73565b005b6103976004803603604081101561036157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ce9565b6040518082815260200191505060405180910390f35b610419600480360360608110156103c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610da8565b005b6104476004803603602081101561043157600080fd5b8101908080359060200190929190505050610dc8565b6040518082815260200191505060405180910390f35b610465610e48565b6040518084815260200183600181111561047b57fe5b60ff168152602001828152602001935050505060405180910390f35b6104c3600480360360208110156104ad57600080fd5b8101908080359060200190929190505050610e6d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61050d610f35565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561054d578082015181840152602081019050610532565b50505050905090810190601f16801561057a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105ca6004803603602081101561059e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fd7565b6040518082815260200191505060405180910390f35b6105e86110ac565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561062857808201518184015260208101905061060d565b50505050905090810190601f1680156106555780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106b16004803603604081101561067957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061114e565b005b6107b6600480360360808110156106c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561073057600080fd5b82018360208201111561074257600080fd5b8035906020019184600183028401116401000000008311171561076457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611306565b005b6107e4600480360360208110156107ce57600080fd5b810190808035906020019092919050505061137e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610824578082015181840152602081019050610809565b50505050905090810190601f1680156108515780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108c16004803603604081101561087557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611580565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109da5780601f106109af576101008083540402835291602001916109da565b820191906000526020600020905b8154815290600101906020018083116109bd57829003601f168201915b5050505050905090565b60006109ef82611614565b610a44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806123f8602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a8a82610e6d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061247c6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610b30611686565b73ffffffffffffffffffffffffffffffffffffffff161480610b5f5750610b5e81610b59611686565b611580565b5b610bb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603881526020018061236d6038913960400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600780549050905090565b610c84610c7e611686565b8261168e565b610cd9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061249d6031913960400191505060405180910390fd5b610ce4838383611782565b505050565b6000610cf483610fd7565b8210610d4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806122c0602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610d9557fe5b9060005260206000200154905092915050565b610dc383838360405180602001604052806000815250611306565b505050565b6000610dd2610c66565b8210610e29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806124ce602c913960400191505060405180910390fd5b60078281548110610e3657fe5b90600052602060002001549050919050565b600d8060000154908060010160009054906101000a900460ff16908060020154905083565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806123cf6029913960400191505060405180910390fd5b80915050919050565b6060600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fcd5780601f10610fa257610100808354040283529160200191610fcd565b820191906000526020600020905b815481529060010190602001808311610fb057829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561105e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806123a5602a913960400191505060405180910390fd5b6110a5600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206117a6565b9050919050565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111445780601f1061111957610100808354040283529160200191611144565b820191906000526020600020905b81548152906001019060200180831161112757829003601f168201915b5050505050905090565b611156611686565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060046000611204611686565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166112b1611686565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611317611311611686565b8361168e565b61136c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061249d6031913960400191505060405180910390fd5b611378848484846117b4565b50505050565b606061138982611614565b6113de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061244d602f913960400191505060405180910390fd5b6060600c60008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114875780601f1061145c57610100808354040283529160200191611487565b820191906000526020600020905b81548152906001019060200180831161146a57829003601f168201915b505050505090506000815114156114b0576040518060200160405280600081525091505061157b565b600b8160405160200180838054600181600116156101000203166002900480156115115780601f106114ef576101008083540402835291820191611511565b820191906000526020600020905b8154815290600101906020018083116114fd575b505082805190602001908083835b60208310611542578051825260208201915060208101905060208303925061151f565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b600061169982611614565b6116ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612341602c913960400191505060405180910390fd5b60006116f983610e6d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061176857508373ffffffffffffffffffffffffffffffffffffffff16611750846109e4565b73ffffffffffffffffffffffffffffffffffffffff16145b8061177957506117788185611580565b5b91505092915050565b61178d838383611826565b6117978382611a81565b6117a18282611c1f565b505050565b600081600001549050919050565b6117bf848484611782565b6117cb84848484611ce6565b611820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806122eb6032913960400191505060405180910390fd5b50505050565b8273ffffffffffffffffffffffffffffffffffffffff1661184682610e6d565b73ffffffffffffffffffffffffffffffffffffffff16146118b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806124246029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061231d6024913960400191505060405180910390fd5b61194181612022565b611988600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120e0565b6119cf600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612103565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611ad96001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061211990919063ffffffff16565b9050600060066000848152602001908152602001600020549050818114611bc6576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611b4657fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611b9e57fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611c18919061226e565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6000611d078473ffffffffffffffffffffffffffffffffffffffff16612163565b611d14576001905061201a565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b611d58611686565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611e08578082015181840152602081019050611ded565b50505050905090810190601f168015611e355780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310611ecd5780518252602082019150602081019050602083039250611eaa565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611f2f576040519150601f19603f3d011682016040523d82523d6000602084013e611f34565b606091505b509150915081611fa257600081511115611f515780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806122eb6032913960400191505060405180910390fd5b6000818060200190516020811015611fb957600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120dd5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6120f86001826000015461211990919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061215b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506121ae565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156121a557506000801b8214155b92505050919050565b600083831115829061225b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612220578082015181840152602081019050612205565b50505050905090810190601f16801561224d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b81548183558181111561229557818360005260206000209182019101612294919061229a565b5b505050565b6122bc91905b808211156122b85760008160009055506001016122a0565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a72315820fda9f4816fecf2b3de9372cca5db9ff4b180670ba2eecb9f0ad665bf194d5a3a64736f6c634300051000324552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a265627a7a72315820c5da16f3758eb71ed27d889c173615dc06010a523d875ea697adfd41658cc91964736f6c63430005100032",
  "sourceMap": "48:2279:1:-;;;718:40:6;385:10;737:20;;718:18;;;:40;;:::i;:::-;2262::9;2136:10;2281:20;;2262:18;;;:40;;:::i;:::-;318:24:4;329:12;:10;;;:12;;:::i;:::-;318:10;;;:24;;:::i;:::-;48:2279:1;;1442:190:6;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;788:96:2:-;833:15;867:10;860:17;;788:96;:::o;786:119:4:-;842:21;855:7;842:8;:12;;;;;;:21;;;;:::i;:::-;890:7;878:20;;;;;;;;;;;;786:119;:::o;260:175:3:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;48:2279:1:-;;;;;;;",
  "deployedSourceMap": "48:2279:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48:2279:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:133:6;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4283:200:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4283:200:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3583:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3583:415:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5929:287;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5929:287:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;443:132:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;443:132:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6865::9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6865:132:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;362:233:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;362:233:10;;;;;;;;;;;;;;;;;:::i;:::-;;1813:506:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1813:506:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2939:223:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2939:223:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2513:207;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2513:207:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1284:167:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1284:167:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1284:167:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1284:167:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1284:167:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1284:167:14;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;607:90:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;607:90:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;703:77;;;:::i;:::-;;823:140:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;823:140:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4776:249:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4776:249:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;494:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;494:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;620:430:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7720:269:9;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7720:269:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7720:269:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7720:269:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7720:269:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7720:269:9;;;;;;;;;;;;;;;:::i;:::-;;5347:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5347:145:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1222:585:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1222:585:1;;;;;;;;;;;;;;;;;:::i;:::-;;915:133:6;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;4283:200:9:-;4342:7;4369:16;4377:7;4369;:16::i;:::-;4361:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4452:15;:24;4468:7;4452:24;;;;;;;;;;;;;;;;;;;;;4445:31;;4283:200;;;:::o;3583:415::-;3646:13;3662:16;3670:7;3662;:16::i;:::-;3646:32;;3702:5;3696:11;;:2;:11;;;;3688:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3780:5;3764:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3789:37;3806:5;3813:12;:10;:12::i;:::-;3789:16;:37::i;:::-;3764:62;3756:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3946:2;3919:15;:24;3935:7;3919:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3983:7;3979:2;3963:28;;3972:5;3963:28;;;;;;;;;;;;3583:415;;;:::o;5929:287::-;6071:41;6090:12;:10;:12::i;:::-;6104:7;6071:18;:41::i;:::-;6063:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6177:32;6191:4;6197:2;6201:7;6177:13;:32::i;:::-;5929:287;;;:::o;443:132:14:-;513:4;395:22:4;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:18:14;535:2;539:7;529:5;:18::i;:::-;564:4;557:11;;443:132;;;;:::o;6865::9:-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;:16;:39::i;:::-;6865:132;;;:::o;362:233:10:-;470:41;489:12;:10;:12::i;:::-;503:7;470:18;:41::i;:::-;462:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:14;580:7;574:5;:14::i;:::-;362:233;:::o;1813:506:1:-;1853:23;1878:13;1938:15;1907:7;:19;1915:10;1907:19;;;;;;;;;;;;;;;:28;;;:46;1903:87;;;1970:9;:7;:9::i;:::-;1903:87;2038:15;2005:48;;;;;;;;:7;:19;2013:10;2005:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:48;;;;;;;;;2001:147;;;2069:19;;;;;;;;;;;;;;;;;;;2001:147;;;2119:18;;;;;;;;;;;;;;;;;;;2001:147;2175:10;2163:91;;;2187:7;:19;2195:10;2187:19;;;;;;;;;;;;;;;:25;;;2214:9;2225:7;:19;2233:10;2225:19;;;;;;;;;;;;;;;:28;;;2163:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2163:91:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2272:9;2283:7;:19;2291:10;2283:19;;;;;;;;;;;;;;;:28;;;2264:48;;;;1813:506;;:::o;2939:223:9:-;2994:7;3013:13;3029:11;:20;3041:7;3029:20;;;;;;;;;;;;;;;;;;;;;3013:36;;3084:1;3067:19;;:5;:19;;;;3059:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3150:5;3143:12;;;2939:223;;;:::o;2513:207::-;2568:7;2612:1;2595:19;;:5;:19;;;;2587:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2679:34;:17;:24;2697:5;2679:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2672:41;;2513:207;;;:::o;1284:167:14:-;1378:4;395:22:4;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1394:29:14;1404:2;1408:7;1417:5;1394:9;:29::i;:::-;1440:4;1433:11;;1284:167;;;;;:::o;607:90:4:-;395:22;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:19;682:7;671:10;:19::i;:::-;607:90;:::o;703:77::-;746:27;760:12;:10;:12::i;:::-;746:13;:27::i;:::-;703:77::o;823:140:14:-;897:4;395:22:4;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;913:22:14;923:2;927:7;913:9;:22::i;:::-;952:4;945:11;;823:140;;;;:::o;4776:249:9:-;4861:12;:10;:12::i;:::-;4855:18;;:2;:18;;;;4847:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4953:8;4914:18;:32;4933:12;:10;:12::i;:::-;4914:32;;;;;;;;;;;;;;;:36;4947:2;4914:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;5005:2;4976:42;;4991:12;:10;:12::i;:::-;4976:42;;;5009:8;4976:42;;;;;;;;;;;;;;;;;;;;;;4776:249;;:::o;494:107:4:-;550:4;573:21;586:7;573:8;:12;;:21;;;;:::i;:::-;566:28;;494:107;;;:::o;620:430:1:-;659:7;688:13;704:8;;688:24;;734:1;722:8;;:13;;;;;;;;;;;746:22;;:::i;:::-;794:5;778:7;:13;;:21;;;;;829:15;809:7;:17;;:35;;;;;;;;;;;;;;;;;;;;;;;873:15;854:7;:16;;:34;;;;;933:7;911;:19;919:10;911:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;959:5;966:7;:16;;;951:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;951:32:1;;993:27;1002:10;1014:5;993:8;:27::i;:::-;;1038:5;1031:12;;;;620:430;:::o;7720:269:9:-;7834:41;7853:12;:10;:12::i;:::-;7867:7;7834:18;:41::i;:::-;7826:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7939:43;7957:4;7963:2;7967:7;7976:5;7939:17;:43::i;:::-;7720:269;;;;:::o;5347:145::-;5427:4;5450:18;:25;5469:5;5450:25;;;;;;;;;;;;;;;:35;5476:8;5450:35;;;;;;;;;;;;;;;;;;;;;;;;;5443:42;;5347:145;;;;:::o;1222:585:1:-;1275:1;1272;:4;1268:235;;;1293:17;;:::i;:::-;1313:7;:19;1321:10;1313:19;;;;;;;;;;;;;;;1293:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1367:6;1360:4;:13;1346:2;:11;;:27;;;;;1394:7;:19;1402:10;1394:19;;;;;;;;;;;;;;;;1387:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:2;1428:7;:19;1436:10;1428:19;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1268:235;;;;1483:9;:7;:9::i;:::-;1268:235;1514:23;1584:15;1551:48;;;;;;;;:7;:19;1559:10;1551:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:48;;;;;;;;;1547:147;;;1615:19;;;;;;;;;;;;;;;;;;;1547:147;;;1665:18;;;;;;;;;;;;;;;;;;;1547:147;1720:10;1709:90;;;1732:7;:19;1740:10;1732:19;;;;;;;;;;;;;;;:25;;;1759:9;1770:7;:19;1778:10;1770:19;;;;;;;;;;;;;;;:28;;;1709:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1709:90:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1222:585;;:::o;9158:152:9:-;9215:4;9231:13;9247:11;:20;9259:7;9247:20;;;;;;;;;;;;;;;;;;;;;9231:36;;9301:1;9284:19;;:5;:19;;;;9277:26;;;9158:152;;;:::o;788:96:2:-;833:15;867:10;860:17;;788:96;:::o;9671:329:9:-;9756:4;9780:16;9788:7;9780;:16::i;:::-;9772:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9855:13;9871:16;9879:7;9871;:16::i;:::-;9855:32;;9916:5;9905:16;;:7;:16;;;:51;;;;9949:7;9925:31;;:20;9937:7;9925:11;:20::i;:::-;:31;;;9905:51;:87;;;;9960:32;9977:5;9984:7;9960:16;:32::i;:::-;9905:87;9897:96;;;9671:329;;;;:::o;13281:447::-;13394:4;13374:24;;:16;13382:7;13374;:16::i;:::-;:24;;;13366:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13476:1;13462:16;;:2;:16;;;;13454:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13530:23;13545:7;13530:14;:23::i;:::-;13564:35;:17;:23;13582:4;13564:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13609:33;:17;:21;13627:2;13609:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13676:2;13653:11;:20;13665:7;13653:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13713:7;13709:2;13694:27;;13703:4;13694:27;;;;;;;;;;;;13281:447;;;:::o;11714:327::-;11799:1;11785:16;;:2;:16;;;;11777:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11857:16;11865:7;11857;:16::i;:::-;11856:17;11848:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11940:2;11917:11;:20;11929:7;11917:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11952:33;:17;:21;11970:2;11952:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12026:7;12022:2;12001:33;;12018:1;12001:33;;;;;;;;;;;;11714:327;;:::o;12814:90::-;12865:32;12871:16;12879:7;12871;:16::i;:::-;12889:7;12865:5;:32::i;:::-;12814:90;:::o;1056:160:1:-;1094:10;1107:7;:19;1115:10;1107:19;;;;;;;;;;;;;;;:25;;;1094:38;;1174:14;1142:7;:19;1150:10;1142:19;;;;;;;;;;;;;;;:29;;;:46;;;;;;;;;;;;;;;;;;;;;;;;1198:11;1203:5;1198:4;:11::i;:::-;1056:160;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11230:239:9:-;11317:18;11323:2;11327:7;11317:5;:18::i;:::-;11353:54;11384:1;11388:2;11392:7;11401:5;11353:22;:54::i;:::-;11345:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11230:239;;;:::o;786:119:4:-;842:21;855:7;842:8;:12;;:21;;;;:::i;:::-;890:7;878:20;;;;;;;;;;;;786:119;:::o;911:127::-;970:24;986:7;970:8;:15;;:24;;;;:::i;:::-;1023:7;1009:22;;;;;;;;;;;;911:127;:::o;10529:100:9:-;10596:26;10606:2;10610:7;10596:26;;;;;;;;;;;;:9;:26::i;:::-;10529:100;;:::o;779:200:3:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;8694:269:9:-;8803:32;8817:4;8823:2;8827:7;8803:13;:32::i;:::-;8853:48;8876:4;8882:2;8886:7;8895:5;8853:22;:48::i;:::-;8845:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8694:269;;;;:::o;15580:171::-;15679:1;15643:38;;:15;:24;15659:7;15643:24;;;;;;;;;;;;;;;;;;;;;:38;;;15639:106;;15732:1;15697:15;:24;15713:7;15697:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;15639:106;15580:171;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;12309:324:9:-;12403:5;12383:25;;:16;12391:7;12383;:16::i;:::-;:25;;;12375:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12461:23;12476:7;12461:14;:23::i;:::-;12495:36;:17;:24;12513:5;12495:24;;;;;;;;;;;;;;;:34;:36::i;:::-;12572:1;12541:11;:20;12553:7;12541:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;12618:7;12614:1;12590:36;;12599:5;12590:36;;;;;;;;;;;;12309:324;;:::o;14367:1051::-;14488:4;14513:15;:2;:13;;;:15::i;:::-;14508:58;;14551:4;14544:11;;;;14508:58;14635:12;14649:23;14676:2;:7;;14736:2;14720:36;;;:45;;;;14779:12;:10;:12::i;:::-;14805:4;14823:7;14844:5;14684:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14684:175:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14684:175:9;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;14684:175:9;14676:184;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14676:184:9;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14634:226:9;;;;14875:7;14870:542;;14922:1;14902:10;:17;:21;14898:376;;;15067:10;15061:17;15127:15;15114:10;15110:2;15106:19;15099:44;15016:145;15199:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14870:542;15304:13;15331:10;15320:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15320:32:9;;;;;;;;;;;;;;;;15304:48;;754:10;15384:16;;15374:26;;;:6;:26;;;;15366:35;;;;;14367:1051;;;;;;;:::o;260:175:3:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;1274:134:8:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;686:610:19:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1732:187:8:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;48:2279:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.16;\n\nimport \"./Pet.sol\";\n\n\ncontract PetFactory is ERC721Mintable, ERC721Burnable  {\n\n\n    event LogPetGenerate(address indexed petOwner, uint petId);\n    event LogPetCheck(address indexed petOwner, uint petId, string status, uint nextFeed);\n    event LogPetFeed(address indexed petOwner, uint petId, string status, uint nextFeed);\n    event LogPetKill(address indexed petOwner, uint petId);\n\n    enum PetStatus {Alive, Dead}\n\n    struct PetInfo {\n        uint petId;\n        PetStatus petStatus;\n        uint nextFeed;\n        \n    }\n\n\n    mapping(address=>PetInfo) petList;\n    uint petCount;\n\n    function generatePet() public returns (uint256) {\n        \n\n        uint256 petId = petCount;\n        petCount += 1;\n\n        PetInfo memory petInfo;\n        petInfo.petId = petId;\n        petInfo.petStatus = PetStatus.Alive;\n        petInfo.nextFeed = block.timestamp; // one week\n\n        petList[msg.sender] = petInfo;\n\n        new Pet(petId, petInfo.nextFeed);\n        safeMint(msg.sender, petId);\n\n        return petId;\n    }\n\n    function killPet() internal {\n        uint petId = petList[msg.sender].petId;\n        petList[msg.sender].petStatus = PetStatus.Dead;\n        burn(petId);\n    }\n\n    function feedPet(uint time) public {\n\n        if (1==1 ) {\n            PetInfo memory pi = petList[msg.sender];\n            pi.nextFeed = time + 604800;\n            delete petList[msg.sender];\n\n            petList[msg.sender] = pi;\n        } else {\n            killPet();\n        }\n\n\n        string memory petStatus;\n        if (petList[msg.sender].petStatus == PetStatus.Alive) {\n            petStatus = 'Alive';\n        } else {\n            petStatus = 'Dead';\n        }\n\n        emit LogPetFeed(msg.sender, petList[msg.sender].petId, petStatus, petList[msg.sender].nextFeed);\n\n    }\n\n    function checkPetInfo() public returns (string memory petStatus, uint nextFeed) {\n        if (petList[msg.sender].nextFeed < block.timestamp ) {\n            killPet();\n        }\n\n\n        if (petList[msg.sender].petStatus == PetStatus.Alive) {\n            petStatus = 'Alive';\n        } else {\n            petStatus = 'Dead';\n        }\n\n        emit LogPetCheck(msg.sender, petList[msg.sender].petId, petStatus, petList[msg.sender].nextFeed);\n        return (petStatus, petList[msg.sender].nextFeed);\n    }\n\n    \n}\n\n\n\n// ideas: state machines, delegate calls, event logs, \n// interfaces, oracles, factory pattern,\n// role based access control, ERC20, ERC20Detailed, ERC20Mintable\n// gnosis multi-sig wallet, upgradeable contracts (registry vs forwarding relay)\n// diamond standard for unlimited size, diamond storage pattern\n// mutex openzepp ReentrancyGuard\n// SafeMath\n\n// look into: erc1400, erc998, erc 1155, ",
  "sourcePath": "/Users/emma/dev/blockchain-developer-bootcamp-final-project/contracts/PetFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/PetFactory.sol",
    "exportedSymbols": {
      "PetFactory": [
        335
      ]
    },
    "id": 336,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 52,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "project:/contracts/Pet.sol",
        "file": "./Pet.sol",
        "id": 53,
        "nodeType": "ImportDirective",
        "scope": 336,
        "sourceUnit": 51,
        "src": "26:19:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 54,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2153,
              "src": "71:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$2153",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 55,
            "nodeType": "InheritanceSpecifier",
            "src": "71:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 56,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1547,
              "src": "87:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$1547",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 57,
            "nodeType": "InheritanceSpecifier",
            "src": "87:14:1"
          }
        ],
        "contractDependencies": [
          50,
          362,
          550,
          651,
          661,
          1519,
          1547,
          2153,
          2256
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 335,
        "linearizedBaseContracts": [
          335,
          1547,
          2153,
          550,
          1519,
          2256,
          651,
          661,
          362
        ],
        "name": "PetFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 63,
            "name": "LogPetGenerate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "indexed": true,
                  "name": "petOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "132:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "name": "petId",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "158:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "158:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "131:38:1"
            },
            "src": "111:59:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 73,
            "name": "LogPetCheck",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "name": "petOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "193:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "name": "petId",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "219:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "231:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "231:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "name": "nextFeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "246:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "246:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "192:68:1"
            },
            "src": "175:86:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 83,
            "name": "LogPetFeed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "indexed": true,
                  "name": "petOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "283:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "283:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "name": "petId",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "309:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "321:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "name": "nextFeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "336:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "336:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "282:68:1"
            },
            "src": "266:85:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 89,
            "name": "LogPetKill",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "indexed": true,
                  "name": "petOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "373:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "indexed": false,
                  "name": "petId",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "399:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:38:1"
            },
            "src": "356:55:1"
          },
          {
            "canonicalName": "PetFactory.PetStatus",
            "id": 92,
            "members": [
              {
                "id": 90,
                "name": "Alive",
                "nodeType": "EnumValue",
                "src": "433:5:1"
              },
              {
                "id": 91,
                "name": "Dead",
                "nodeType": "EnumValue",
                "src": "440:4:1"
              }
            ],
            "name": "PetStatus",
            "nodeType": "EnumDefinition",
            "src": "417:28:1"
          },
          {
            "canonicalName": "PetFactory.PetInfo",
            "id": 99,
            "members": [
              {
                "constant": false,
                "id": 94,
                "name": "petId",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "476:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 93,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "476:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 96,
                "name": "petStatus",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "496:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_PetStatus_$92",
                  "typeString": "enum PetFactory.PetStatus"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 95,
                  "name": "PetStatus",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 92,
                  "src": "496:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PetStatus_$92",
                    "typeString": "enum PetFactory.PetStatus"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 98,
                "name": "nextFeed",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "525:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 97,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "525:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PetInfo",
            "nodeType": "StructDefinition",
            "scope": 335,
            "src": "451:103:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 103,
            "name": "petList",
            "nodeType": "VariableDeclaration",
            "scope": 335,
            "src": "561:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
              "typeString": "mapping(address => struct PetFactory.PetInfo)"
            },
            "typeName": {
              "id": 102,
              "keyType": {
                "id": 100,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "569:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "561:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                "typeString": "mapping(address => struct PetFactory.PetInfo)"
              },
              "valueType": {
                "contractScope": null,
                "id": 101,
                "name": "PetInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 99,
                "src": "578:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PetInfo_$99_storage_ptr",
                  "typeString": "struct PetFactory.PetInfo"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 105,
            "name": "petCount",
            "nodeType": "VariableDeclaration",
            "scope": 335,
            "src": "600:13:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 104,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "600:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "668:382:1",
              "statements": [
                {
                  "assignments": [
                    111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 111,
                      "name": "petId",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "688:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "688:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 113,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 112,
                    "name": "petCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 105,
                    "src": "704:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "688:24:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 114,
                      "name": "petCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "722:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "734:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "722:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "722:13:1"
                },
                {
                  "assignments": [
                    119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 119,
                      "name": "petInfo",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "746:22:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PetInfo_$99_memory_ptr",
                        "typeString": "struct PetFactory.PetInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 118,
                        "name": "PetInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 99,
                        "src": "746:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PetInfo_$99_storage_ptr",
                          "typeString": "struct PetFactory.PetInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 120,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "746:22:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 121,
                        "name": "petInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "778:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PetInfo_$99_memory_ptr",
                          "typeString": "struct PetFactory.PetInfo memory"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "petId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94,
                      "src": "778:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "petId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "794:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "778:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "778:21:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "petInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "809:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PetInfo_$99_memory_ptr",
                          "typeString": "struct PetFactory.PetInfo memory"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "petStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96,
                      "src": "809:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PetStatus_$92",
                        "typeString": "enum PetFactory.PetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "PetStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "829:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PetStatus_$92_$",
                          "typeString": "type(enum PetFactory.PetStatus)"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Alive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "829:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PetStatus_$92",
                        "typeString": "enum PetFactory.PetStatus"
                      }
                    },
                    "src": "809:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PetStatus_$92",
                      "typeString": "enum PetFactory.PetStatus"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "809:35:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "petInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "854:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PetInfo_$99_memory_ptr",
                          "typeString": "struct PetFactory.PetInfo memory"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nextFeed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98,
                      "src": "854:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 137,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2402,
                        "src": "873:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "873:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "854:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "854:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "petList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "911:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                          "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                        }
                      },
                      "id": 144,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 142,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2412,
                          "src": "919:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "919:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "911:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                        "typeString": "struct PetFactory.PetInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "petInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "933:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PetInfo_$99_memory_ptr",
                        "typeString": "struct PetFactory.PetInfo memory"
                      }
                    },
                    "src": "911:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                      "typeString": "struct PetFactory.PetInfo storage ref"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "911:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 150,
                        "name": "petId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "959:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 151,
                          "name": "petInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "966:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PetInfo_$99_memory_ptr",
                            "typeString": "struct PetFactory.PetInfo memory"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nextFeed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 98,
                        "src": "966:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "951:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_Pet_$50_$",
                        "typeString": "function (uint256,uint256) returns (contract Pet)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 148,
                        "name": "Pet",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 50,
                        "src": "955:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pet_$50",
                          "typeString": "contract Pet"
                        }
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "951:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pet_$50",
                      "typeString": "contract Pet"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "951:32:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 156,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2412,
                          "src": "1002:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1002:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 158,
                        "name": "petId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1014:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 155,
                      "name": "safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2130,
                        2152
                      ],
                      "referencedDeclaration": 2130,
                      "src": "993:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "993:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 161,
                    "name": "petId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 111,
                    "src": "1038:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 109,
                  "id": 162,
                  "nodeType": "Return",
                  "src": "1031:12:1"
                }
              ]
            },
            "documentation": null,
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generatePet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:2:1"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "659:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "658:9:1"
            },
            "scope": 335,
            "src": "620:430:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "1084:132:1",
              "statements": [
                {
                  "assignments": [
                    168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 168,
                      "name": "petId",
                      "nodeType": "VariableDeclaration",
                      "scope": 188,
                      "src": "1094:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 167,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1094:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "petList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "1107:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                          "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                        }
                      },
                      "id": 172,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 170,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2412,
                          "src": "1115:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1115:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1107:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                        "typeString": "struct PetFactory.PetInfo storage ref"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "petId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 94,
                    "src": "1107:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1094:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 175,
                          "name": "petList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "1142:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                            "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                          }
                        },
                        "id": 178,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 176,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2412,
                            "src": "1150:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1150:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1142:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                          "typeString": "struct PetFactory.PetInfo storage ref"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "petStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96,
                      "src": "1142:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PetStatus_$92",
                        "typeString": "enum PetFactory.PetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "PetStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1174:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PetStatus_$92_$",
                          "typeString": "type(enum PetFactory.PetStatus)"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Dead",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1174:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PetStatus_$92",
                        "typeString": "enum PetFactory.PetStatus"
                      }
                    },
                    "src": "1142:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PetStatus_$92",
                      "typeString": "enum PetFactory.PetStatus"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "1142:46:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "petId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "1203:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 184,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "1198:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1198:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "1198:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "killPet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1072:2:1"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1084:0:1"
            },
            "scope": 335,
            "src": "1056:160:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 269,
              "nodeType": "Block",
              "src": "1257:550:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1272:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1275:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1272:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 229,
                    "nodeType": "Block",
                    "src": "1469:34:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 226,
                            "name": "killPet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "1483:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1483:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 228,
                        "nodeType": "ExpressionStatement",
                        "src": "1483:9:1"
                      }
                    ]
                  },
                  "id": 230,
                  "nodeType": "IfStatement",
                  "src": "1268:235:1",
                  "trueBody": {
                    "id": 225,
                    "nodeType": "Block",
                    "src": "1279:184:1",
                    "statements": [
                      {
                        "assignments": [
                          198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 198,
                            "name": "pi",
                            "nodeType": "VariableDeclaration",
                            "scope": 225,
                            "src": "1293:17:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PetInfo_$99_memory_ptr",
                              "typeString": "struct PetFactory.PetInfo"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 197,
                              "name": "PetInfo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 99,
                              "src": "1293:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PetInfo_$99_storage_ptr",
                                "typeString": "struct PetFactory.PetInfo"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 203,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 199,
                            "name": "petList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "1313:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                              "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                            }
                          },
                          "id": 202,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 200,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2412,
                              "src": "1321:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1321:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1313:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                            "typeString": "struct PetFactory.PetInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1293:39:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 204,
                              "name": "pi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "1346:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PetInfo_$99_memory_ptr",
                                "typeString": "struct PetFactory.PetInfo memory"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nextFeed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 98,
                            "src": "1346:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 207,
                              "name": "time",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "1360:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "363034383030",
                              "id": 208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1367:6:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_604800_by_1",
                                "typeString": "int_const 604800"
                              },
                              "value": "604800"
                            },
                            "src": "1360:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1346:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 211,
                        "nodeType": "ExpressionStatement",
                        "src": "1346:27:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "1387:26:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 212,
                              "name": "petList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "1394:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                                "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                              }
                            },
                            "id": 215,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 213,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2412,
                                "src": "1402:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1402:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1394:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                              "typeString": "struct PetFactory.PetInfo storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 217,
                        "nodeType": "ExpressionStatement",
                        "src": "1387:26:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 218,
                              "name": "petList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "1428:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                                "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                              }
                            },
                            "id": 221,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 219,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2412,
                                "src": "1436:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1436:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1428:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                              "typeString": "struct PetFactory.PetInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 222,
                            "name": "pi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "1450:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PetInfo_$99_memory_ptr",
                              "typeString": "struct PetFactory.PetInfo memory"
                            }
                          },
                          "src": "1428:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                            "typeString": "struct PetFactory.PetInfo storage ref"
                          }
                        },
                        "id": 224,
                        "nodeType": "ExpressionStatement",
                        "src": "1428:24:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 232,
                      "name": "petStatus",
                      "nodeType": "VariableDeclaration",
                      "scope": 269,
                      "src": "1514:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 231,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1514:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 233,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1514:23:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_PetStatus_$92",
                      "typeString": "enum PetFactory.PetStatus"
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 234,
                          "name": "petList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "1551:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                            "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                          }
                        },
                        "id": 237,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2412,
                            "src": "1559:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1559:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1551:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                          "typeString": "struct PetFactory.PetInfo storage ref"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "petStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96,
                      "src": "1551:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PetStatus_$92",
                        "typeString": "enum PetFactory.PetStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 239,
                        "name": "PetStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1584:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PetStatus_$92_$",
                          "typeString": "type(enum PetFactory.PetStatus)"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Alive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1584:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PetStatus_$92",
                        "typeString": "enum PetFactory.PetStatus"
                      }
                    },
                    "src": "1551:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 251,
                    "nodeType": "Block",
                    "src": "1651:43:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 247,
                            "name": "petStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "1665:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "44656164",
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1677:6:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2c66656081346e209902e2f993a3908b3aaf4b99f39d90cc48e1ec84b085c67c",
                              "typeString": "literal_string \"Dead\""
                            },
                            "value": "Dead"
                          },
                          "src": "1665:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 250,
                        "nodeType": "ExpressionStatement",
                        "src": "1665:18:1"
                      }
                    ]
                  },
                  "id": 252,
                  "nodeType": "IfStatement",
                  "src": "1547:147:1",
                  "trueBody": {
                    "id": 246,
                    "nodeType": "Block",
                    "src": "1601:44:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 242,
                            "name": "petStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "1615:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "416c697665",
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1627:7:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0b240883b7e97aa4f6cc51876c342e2992f161e590416a44ebaf317d5143a1f6",
                              "typeString": "literal_string \"Alive\""
                            },
                            "value": "Alive"
                          },
                          "src": "1615:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 245,
                        "nodeType": "ExpressionStatement",
                        "src": "1615:19:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 254,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2412,
                          "src": "1720:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1720:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 256,
                            "name": "petList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "1732:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                              "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                            }
                          },
                          "id": 259,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 257,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2412,
                              "src": "1740:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1740:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1732:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                            "typeString": "struct PetFactory.PetInfo storage ref"
                          }
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "petId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94,
                        "src": "1732:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 261,
                        "name": "petStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "1759:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 262,
                            "name": "petList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "1770:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                              "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                            }
                          },
                          "id": 265,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 263,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2412,
                              "src": "1778:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1778:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1770:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                            "typeString": "struct PetFactory.PetInfo storage ref"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nextFeed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 98,
                        "src": "1770:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 253,
                      "name": "LogPetFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1709:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,string memory,uint256)"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1709:90:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "EmitStatement",
                  "src": "1704:95:1"
                }
              ]
            },
            "documentation": null,
            "id": 270,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "feedPet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "1239:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1238:11:1"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:0:1"
            },
            "scope": 335,
            "src": "1222:585:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "1893:426:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 277,
                          "name": "petList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "1907:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                            "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                          }
                        },
                        "id": 280,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 278,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2412,
                            "src": "1915:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1915:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1907:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                          "typeString": "struct PetFactory.PetInfo storage ref"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nextFeed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98,
                      "src": "1907:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 282,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2402,
                        "src": "1938:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1938:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1907:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 289,
                  "nodeType": "IfStatement",
                  "src": "1903:87:1",
                  "trueBody": {
                    "id": 288,
                    "nodeType": "Block",
                    "src": "1956:34:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 285,
                            "name": "killPet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "1970:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1970:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 287,
                        "nodeType": "ExpressionStatement",
                        "src": "1970:9:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_PetStatus_$92",
                      "typeString": "enum PetFactory.PetStatus"
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 290,
                          "name": "petList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "2005:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                            "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                          }
                        },
                        "id": 293,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 291,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2412,
                            "src": "2013:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2013:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2005:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                          "typeString": "struct PetFactory.PetInfo storage ref"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "petStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96,
                      "src": "2005:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PetStatus_$92",
                        "typeString": "enum PetFactory.PetStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 295,
                        "name": "PetStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "2038:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PetStatus_$92_$",
                          "typeString": "type(enum PetFactory.PetStatus)"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Alive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2038:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PetStatus_$92",
                        "typeString": "enum PetFactory.PetStatus"
                      }
                    },
                    "src": "2005:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 307,
                    "nodeType": "Block",
                    "src": "2105:43:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 303,
                            "name": "petStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "2119:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "44656164",
                            "id": 304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2131:6:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2c66656081346e209902e2f993a3908b3aaf4b99f39d90cc48e1ec84b085c67c",
                              "typeString": "literal_string \"Dead\""
                            },
                            "value": "Dead"
                          },
                          "src": "2119:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 306,
                        "nodeType": "ExpressionStatement",
                        "src": "2119:18:1"
                      }
                    ]
                  },
                  "id": 308,
                  "nodeType": "IfStatement",
                  "src": "2001:147:1",
                  "trueBody": {
                    "id": 302,
                    "nodeType": "Block",
                    "src": "2055:44:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 298,
                            "name": "petStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "2069:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "416c697665",
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2081:7:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0b240883b7e97aa4f6cc51876c342e2992f161e590416a44ebaf317d5143a1f6",
                              "typeString": "literal_string \"Alive\""
                            },
                            "value": "Alive"
                          },
                          "src": "2069:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 301,
                        "nodeType": "ExpressionStatement",
                        "src": "2069:19:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2412,
                          "src": "2175:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2175:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 312,
                            "name": "petList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "2187:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                              "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                            }
                          },
                          "id": 315,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 313,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2412,
                              "src": "2195:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2195:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2187:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                            "typeString": "struct PetFactory.PetInfo storage ref"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "petId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94,
                        "src": "2187:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 317,
                        "name": "petStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "2214:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 318,
                            "name": "petList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "2225:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                              "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                            }
                          },
                          "id": 321,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 319,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2412,
                              "src": "2233:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2233:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2225:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                            "typeString": "struct PetFactory.PetInfo storage ref"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nextFeed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 98,
                        "src": "2225:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 309,
                      "name": "LogPetCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2163:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,string memory,uint256)"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2163:91:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "EmitStatement",
                  "src": "2158:96:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 325,
                        "name": "petStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "2272:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 326,
                            "name": "petList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "2283:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PetInfo_$99_storage_$",
                              "typeString": "mapping(address => struct PetFactory.PetInfo storage ref)"
                            }
                          },
                          "id": 329,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 327,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2412,
                              "src": "2291:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2291:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2283:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PetInfo_$99_storage",
                            "typeString": "struct PetFactory.PetInfo storage ref"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nextFeed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 98,
                        "src": "2283:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 331,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2271:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(string memory,uint256)"
                    }
                  },
                  "functionReturnParameters": 276,
                  "id": 332,
                  "nodeType": "Return",
                  "src": "2264:48:1"
                }
              ]
            },
            "documentation": null,
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkPetInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:2:1"
            },
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "name": "petStatus",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1853:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "name": "nextFeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1878:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1878:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1852:40:1"
            },
            "scope": 335,
            "src": "1813:506:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 336,
        "src": "48:2279:1"
      }
    ],
    "src": "0:2726:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/PetFactory.sol",
      "exportedSymbols": {
        "PetFactory": [
          335
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".16"
          ]
        },
        "id": 52,
        "name": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "attributes": {
          "SourceUnit": 51,
          "absolutePath": "project:/contracts/Pet.sol",
          "file": "./Pet.sol",
          "scope": 336,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 53,
        "name": "ImportDirective",
        "src": "26:19:1"
      },
      {
        "attributes": {
          "contractDependencies": [
            50,
            362,
            550,
            651,
            661,
            1519,
            1547,
            2153,
            2256
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            335,
            1547,
            2153,
            550,
            1519,
            2256,
            651,
            661,
            362
          ],
          "name": "PetFactory",
          "scope": 336
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Mintable",
                  "referencedDeclaration": 2153,
                  "type": "contract ERC721Mintable"
                },
                "id": 54,
                "name": "UserDefinedTypeName",
                "src": "71:14:1"
              }
            ],
            "id": 55,
            "name": "InheritanceSpecifier",
            "src": "71:14:1"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Burnable",
                  "referencedDeclaration": 1547,
                  "type": "contract ERC721Burnable"
                },
                "id": 56,
                "name": "UserDefinedTypeName",
                "src": "87:14:1"
              }
            ],
            "id": 57,
            "name": "InheritanceSpecifier",
            "src": "87:14:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "LogPetGenerate"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "petOwner",
                      "scope": 63,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 58,
                        "name": "ElementaryTypeName",
                        "src": "132:7:1"
                      }
                    ],
                    "id": 59,
                    "name": "VariableDeclaration",
                    "src": "132:24:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "petId",
                      "scope": 63,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 60,
                        "name": "ElementaryTypeName",
                        "src": "158:4:1"
                      }
                    ],
                    "id": 61,
                    "name": "VariableDeclaration",
                    "src": "158:10:1"
                  }
                ],
                "id": 62,
                "name": "ParameterList",
                "src": "131:38:1"
              }
            ],
            "id": 63,
            "name": "EventDefinition",
            "src": "111:59:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "LogPetCheck"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "petOwner",
                      "scope": 73,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 64,
                        "name": "ElementaryTypeName",
                        "src": "193:7:1"
                      }
                    ],
                    "id": 65,
                    "name": "VariableDeclaration",
                    "src": "193:24:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "petId",
                      "scope": 73,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 66,
                        "name": "ElementaryTypeName",
                        "src": "219:4:1"
                      }
                    ],
                    "id": 67,
                    "name": "VariableDeclaration",
                    "src": "219:10:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "status",
                      "scope": 73,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 68,
                        "name": "ElementaryTypeName",
                        "src": "231:6:1"
                      }
                    ],
                    "id": 69,
                    "name": "VariableDeclaration",
                    "src": "231:13:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "nextFeed",
                      "scope": 73,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 70,
                        "name": "ElementaryTypeName",
                        "src": "246:4:1"
                      }
                    ],
                    "id": 71,
                    "name": "VariableDeclaration",
                    "src": "246:13:1"
                  }
                ],
                "id": 72,
                "name": "ParameterList",
                "src": "192:68:1"
              }
            ],
            "id": 73,
            "name": "EventDefinition",
            "src": "175:86:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "LogPetFeed"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "petOwner",
                      "scope": 83,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 74,
                        "name": "ElementaryTypeName",
                        "src": "283:7:1"
                      }
                    ],
                    "id": 75,
                    "name": "VariableDeclaration",
                    "src": "283:24:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "petId",
                      "scope": 83,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 76,
                        "name": "ElementaryTypeName",
                        "src": "309:4:1"
                      }
                    ],
                    "id": 77,
                    "name": "VariableDeclaration",
                    "src": "309:10:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "status",
                      "scope": 83,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 78,
                        "name": "ElementaryTypeName",
                        "src": "321:6:1"
                      }
                    ],
                    "id": 79,
                    "name": "VariableDeclaration",
                    "src": "321:13:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "nextFeed",
                      "scope": 83,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 80,
                        "name": "ElementaryTypeName",
                        "src": "336:4:1"
                      }
                    ],
                    "id": 81,
                    "name": "VariableDeclaration",
                    "src": "336:13:1"
                  }
                ],
                "id": 82,
                "name": "ParameterList",
                "src": "282:68:1"
              }
            ],
            "id": 83,
            "name": "EventDefinition",
            "src": "266:85:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "LogPetKill"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "petOwner",
                      "scope": 89,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 84,
                        "name": "ElementaryTypeName",
                        "src": "373:7:1"
                      }
                    ],
                    "id": 85,
                    "name": "VariableDeclaration",
                    "src": "373:24:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "petId",
                      "scope": 89,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 86,
                        "name": "ElementaryTypeName",
                        "src": "399:4:1"
                      }
                    ],
                    "id": 87,
                    "name": "VariableDeclaration",
                    "src": "399:10:1"
                  }
                ],
                "id": 88,
                "name": "ParameterList",
                "src": "372:38:1"
              }
            ],
            "id": 89,
            "name": "EventDefinition",
            "src": "356:55:1"
          },
          {
            "attributes": {
              "canonicalName": "PetFactory.PetStatus",
              "name": "PetStatus"
            },
            "children": [
              {
                "attributes": {
                  "name": "Alive"
                },
                "id": 90,
                "name": "EnumValue",
                "src": "433:5:1"
              },
              {
                "attributes": {
                  "name": "Dead"
                },
                "id": 91,
                "name": "EnumValue",
                "src": "440:4:1"
              }
            ],
            "id": 92,
            "name": "EnumDefinition",
            "src": "417:28:1"
          },
          {
            "attributes": {
              "canonicalName": "PetFactory.PetInfo",
              "name": "PetInfo",
              "scope": 335,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "petId",
                  "scope": 99,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 93,
                    "name": "ElementaryTypeName",
                    "src": "476:4:1"
                  }
                ],
                "id": 94,
                "name": "VariableDeclaration",
                "src": "476:10:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "petStatus",
                  "scope": 99,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum PetFactory.PetStatus",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "PetStatus",
                      "referencedDeclaration": 92,
                      "type": "enum PetFactory.PetStatus"
                    },
                    "id": 95,
                    "name": "UserDefinedTypeName",
                    "src": "496:9:1"
                  }
                ],
                "id": 96,
                "name": "VariableDeclaration",
                "src": "496:19:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "nextFeed",
                  "scope": 99,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 97,
                    "name": "ElementaryTypeName",
                    "src": "525:4:1"
                  }
                ],
                "id": 98,
                "name": "VariableDeclaration",
                "src": "525:13:1"
              }
            ],
            "id": 99,
            "name": "StructDefinition",
            "src": "451:103:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "petList",
              "scope": 335,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct PetFactory.PetInfo)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct PetFactory.PetInfo)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 100,
                    "name": "ElementaryTypeName",
                    "src": "569:7:1"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "PetInfo",
                      "referencedDeclaration": 99,
                      "type": "struct PetFactory.PetInfo"
                    },
                    "id": 101,
                    "name": "UserDefinedTypeName",
                    "src": "578:7:1"
                  }
                ],
                "id": 102,
                "name": "Mapping",
                "src": "561:25:1"
              }
            ],
            "id": 103,
            "name": "VariableDeclaration",
            "src": "561:33:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "petCount",
              "scope": 335,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 104,
                "name": "ElementaryTypeName",
                "src": "600:4:1"
              }
            ],
            "id": 105,
            "name": "VariableDeclaration",
            "src": "600:13:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "generatePet",
              "scope": 335,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 106,
                "name": "ParameterList",
                "src": "640:2:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 164,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 107,
                        "name": "ElementaryTypeName",
                        "src": "659:7:1"
                      }
                    ],
                    "id": 108,
                    "name": "VariableDeclaration",
                    "src": "659:7:1"
                  }
                ],
                "id": 109,
                "name": "ParameterList",
                "src": "658:9:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        111
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "petId",
                          "scope": 163,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 110,
                            "name": "ElementaryTypeName",
                            "src": "688:7:1"
                          }
                        ],
                        "id": 111,
                        "name": "VariableDeclaration",
                        "src": "688:13:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 105,
                          "type": "uint256",
                          "value": "petCount"
                        },
                        "id": 112,
                        "name": "Identifier",
                        "src": "704:8:1"
                      }
                    ],
                    "id": 113,
                    "name": "VariableDeclarationStatement",
                    "src": "688:24:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 105,
                              "type": "uint256",
                              "value": "petCount"
                            },
                            "id": 114,
                            "name": "Identifier",
                            "src": "722:8:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 115,
                            "name": "Literal",
                            "src": "734:1:1"
                          }
                        ],
                        "id": 116,
                        "name": "Assignment",
                        "src": "722:13:1"
                      }
                    ],
                    "id": 117,
                    "name": "ExpressionStatement",
                    "src": "722:13:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        119
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "petInfo",
                          "scope": 163,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct PetFactory.PetInfo",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "PetInfo",
                              "referencedDeclaration": 99,
                              "type": "struct PetFactory.PetInfo"
                            },
                            "id": 118,
                            "name": "UserDefinedTypeName",
                            "src": "746:7:1"
                          }
                        ],
                        "id": 119,
                        "name": "VariableDeclaration",
                        "src": "746:22:1"
                      }
                    ],
                    "id": 120,
                    "name": "VariableDeclarationStatement",
                    "src": "746:22:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "petId",
                              "referencedDeclaration": 94,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 119,
                                  "type": "struct PetFactory.PetInfo memory",
                                  "value": "petInfo"
                                },
                                "id": 121,
                                "name": "Identifier",
                                "src": "778:7:1"
                              }
                            ],
                            "id": 123,
                            "name": "MemberAccess",
                            "src": "778:13:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 111,
                              "type": "uint256",
                              "value": "petId"
                            },
                            "id": 124,
                            "name": "Identifier",
                            "src": "794:5:1"
                          }
                        ],
                        "id": 125,
                        "name": "Assignment",
                        "src": "778:21:1"
                      }
                    ],
                    "id": 126,
                    "name": "ExpressionStatement",
                    "src": "778:21:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum PetFactory.PetStatus"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "petStatus",
                              "referencedDeclaration": 96,
                              "type": "enum PetFactory.PetStatus"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 119,
                                  "type": "struct PetFactory.PetInfo memory",
                                  "value": "petInfo"
                                },
                                "id": 127,
                                "name": "Identifier",
                                "src": "809:7:1"
                              }
                            ],
                            "id": 129,
                            "name": "MemberAccess",
                            "src": "809:17:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "Alive",
                              "referencedDeclaration": null,
                              "type": "enum PetFactory.PetStatus"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 92,
                                  "type": "type(enum PetFactory.PetStatus)",
                                  "value": "PetStatus"
                                },
                                "id": 130,
                                "name": "Identifier",
                                "src": "829:9:1"
                              }
                            ],
                            "id": 131,
                            "name": "MemberAccess",
                            "src": "829:15:1"
                          }
                        ],
                        "id": 132,
                        "name": "Assignment",
                        "src": "809:35:1"
                      }
                    ],
                    "id": 133,
                    "name": "ExpressionStatement",
                    "src": "809:35:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "nextFeed",
                              "referencedDeclaration": 98,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 119,
                                  "type": "struct PetFactory.PetInfo memory",
                                  "value": "petInfo"
                                },
                                "id": 134,
                                "name": "Identifier",
                                "src": "854:7:1"
                              }
                            ],
                            "id": 136,
                            "name": "MemberAccess",
                            "src": "854:16:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2402,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 137,
                                "name": "Identifier",
                                "src": "873:5:1"
                              }
                            ],
                            "id": 138,
                            "name": "MemberAccess",
                            "src": "873:15:1"
                          }
                        ],
                        "id": 139,
                        "name": "Assignment",
                        "src": "854:34:1"
                      }
                    ],
                    "id": 140,
                    "name": "ExpressionStatement",
                    "src": "854:34:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct PetFactory.PetInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct PetFactory.PetInfo storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 103,
                                  "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                  "value": "petList"
                                },
                                "id": 141,
                                "name": "Identifier",
                                "src": "911:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2412,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 142,
                                    "name": "Identifier",
                                    "src": "919:3:1"
                                  }
                                ],
                                "id": 143,
                                "name": "MemberAccess",
                                "src": "919:10:1"
                              }
                            ],
                            "id": 144,
                            "name": "IndexAccess",
                            "src": "911:19:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 119,
                              "type": "struct PetFactory.PetInfo memory",
                              "value": "petInfo"
                            },
                            "id": 145,
                            "name": "Identifier",
                            "src": "933:7:1"
                          }
                        ],
                        "id": 146,
                        "name": "Assignment",
                        "src": "911:29:1"
                      }
                    ],
                    "id": 147,
                    "name": "ExpressionStatement",
                    "src": "911:29:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract Pet",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "function (uint256,uint256) returns (contract Pet)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "contractScope": null,
                                  "name": "Pet",
                                  "referencedDeclaration": 50,
                                  "type": "contract Pet"
                                },
                                "id": 148,
                                "name": "UserDefinedTypeName",
                                "src": "955:3:1"
                              }
                            ],
                            "id": 149,
                            "name": "NewExpression",
                            "src": "951:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 111,
                              "type": "uint256",
                              "value": "petId"
                            },
                            "id": 150,
                            "name": "Identifier",
                            "src": "959:5:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "nextFeed",
                              "referencedDeclaration": 98,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 119,
                                  "type": "struct PetFactory.PetInfo memory",
                                  "value": "petInfo"
                                },
                                "id": 151,
                                "name": "Identifier",
                                "src": "966:7:1"
                              }
                            ],
                            "id": 152,
                            "name": "MemberAccess",
                            "src": "966:16:1"
                          }
                        ],
                        "id": 153,
                        "name": "FunctionCall",
                        "src": "951:32:1"
                      }
                    ],
                    "id": 154,
                    "name": "ExpressionStatement",
                    "src": "951:32:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                2130,
                                2152
                              ],
                              "referencedDeclaration": 2130,
                              "type": "function (address,uint256) returns (bool)",
                              "value": "safeMint"
                            },
                            "id": 155,
                            "name": "Identifier",
                            "src": "993:8:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2412,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 156,
                                "name": "Identifier",
                                "src": "1002:3:1"
                              }
                            ],
                            "id": 157,
                            "name": "MemberAccess",
                            "src": "1002:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 111,
                              "type": "uint256",
                              "value": "petId"
                            },
                            "id": 158,
                            "name": "Identifier",
                            "src": "1014:5:1"
                          }
                        ],
                        "id": 159,
                        "name": "FunctionCall",
                        "src": "993:27:1"
                      }
                    ],
                    "id": 160,
                    "name": "ExpressionStatement",
                    "src": "993:27:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 109
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 111,
                          "type": "uint256",
                          "value": "petId"
                        },
                        "id": 161,
                        "name": "Identifier",
                        "src": "1038:5:1"
                      }
                    ],
                    "id": 162,
                    "name": "Return",
                    "src": "1031:12:1"
                  }
                ],
                "id": 163,
                "name": "Block",
                "src": "668:382:1"
              }
            ],
            "id": 164,
            "name": "FunctionDefinition",
            "src": "620:430:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "killPet",
              "scope": 335,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 165,
                "name": "ParameterList",
                "src": "1072:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 166,
                "name": "ParameterList",
                "src": "1084:0:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        168
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "petId",
                          "scope": 188,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 167,
                            "name": "ElementaryTypeName",
                            "src": "1094:4:1"
                          }
                        ],
                        "id": 168,
                        "name": "VariableDeclaration",
                        "src": "1094:10:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "petId",
                          "referencedDeclaration": 94,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct PetFactory.PetInfo storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 103,
                                  "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                  "value": "petList"
                                },
                                "id": 169,
                                "name": "Identifier",
                                "src": "1107:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2412,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 170,
                                    "name": "Identifier",
                                    "src": "1115:3:1"
                                  }
                                ],
                                "id": 171,
                                "name": "MemberAccess",
                                "src": "1115:10:1"
                              }
                            ],
                            "id": 172,
                            "name": "IndexAccess",
                            "src": "1107:19:1"
                          }
                        ],
                        "id": 173,
                        "name": "MemberAccess",
                        "src": "1107:25:1"
                      }
                    ],
                    "id": 174,
                    "name": "VariableDeclarationStatement",
                    "src": "1094:38:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum PetFactory.PetStatus"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "petStatus",
                              "referencedDeclaration": 96,
                              "type": "enum PetFactory.PetStatus"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct PetFactory.PetInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 103,
                                      "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                      "value": "petList"
                                    },
                                    "id": 175,
                                    "name": "Identifier",
                                    "src": "1142:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2412,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 176,
                                        "name": "Identifier",
                                        "src": "1150:3:1"
                                      }
                                    ],
                                    "id": 177,
                                    "name": "MemberAccess",
                                    "src": "1150:10:1"
                                  }
                                ],
                                "id": 178,
                                "name": "IndexAccess",
                                "src": "1142:19:1"
                              }
                            ],
                            "id": 179,
                            "name": "MemberAccess",
                            "src": "1142:29:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "Dead",
                              "referencedDeclaration": null,
                              "type": "enum PetFactory.PetStatus"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 92,
                                  "type": "type(enum PetFactory.PetStatus)",
                                  "value": "PetStatus"
                                },
                                "id": 180,
                                "name": "Identifier",
                                "src": "1174:9:1"
                              }
                            ],
                            "id": 181,
                            "name": "MemberAccess",
                            "src": "1174:14:1"
                          }
                        ],
                        "id": 182,
                        "name": "Assignment",
                        "src": "1142:46:1"
                      }
                    ],
                    "id": 183,
                    "name": "ExpressionStatement",
                    "src": "1142:46:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1546,
                              "type": "function (uint256)",
                              "value": "burn"
                            },
                            "id": 184,
                            "name": "Identifier",
                            "src": "1198:4:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 168,
                              "type": "uint256",
                              "value": "petId"
                            },
                            "id": 185,
                            "name": "Identifier",
                            "src": "1203:5:1"
                          }
                        ],
                        "id": 186,
                        "name": "FunctionCall",
                        "src": "1198:11:1"
                      }
                    ],
                    "id": 187,
                    "name": "ExpressionStatement",
                    "src": "1198:11:1"
                  }
                ],
                "id": 188,
                "name": "Block",
                "src": "1084:132:1"
              }
            ],
            "id": 189,
            "name": "FunctionDefinition",
            "src": "1056:160:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "feedPet",
              "scope": 335,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "time",
                      "scope": 270,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 190,
                        "name": "ElementaryTypeName",
                        "src": "1239:4:1"
                      }
                    ],
                    "id": 191,
                    "name": "VariableDeclaration",
                    "src": "1239:9:1"
                  }
                ],
                "id": 192,
                "name": "ParameterList",
                "src": "1238:11:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 193,
                "name": "ParameterList",
                "src": "1257:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 194,
                            "name": "Literal",
                            "src": "1272:1:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 195,
                            "name": "Literal",
                            "src": "1275:1:1"
                          }
                        ],
                        "id": 196,
                        "name": "BinaryOperation",
                        "src": "1272:4:1"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                198
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "pi",
                                  "scope": 225,
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "type": "struct PetFactory.PetInfo",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "PetInfo",
                                      "referencedDeclaration": 99,
                                      "type": "struct PetFactory.PetInfo"
                                    },
                                    "id": 197,
                                    "name": "UserDefinedTypeName",
                                    "src": "1293:7:1"
                                  }
                                ],
                                "id": 198,
                                "name": "VariableDeclaration",
                                "src": "1293:17:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct PetFactory.PetInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 103,
                                      "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                      "value": "petList"
                                    },
                                    "id": 199,
                                    "name": "Identifier",
                                    "src": "1313:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2412,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 200,
                                        "name": "Identifier",
                                        "src": "1321:3:1"
                                      }
                                    ],
                                    "id": 201,
                                    "name": "MemberAccess",
                                    "src": "1321:10:1"
                                  }
                                ],
                                "id": 202,
                                "name": "IndexAccess",
                                "src": "1313:19:1"
                              }
                            ],
                            "id": 203,
                            "name": "VariableDeclarationStatement",
                            "src": "1293:39:1"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "nextFeed",
                                      "referencedDeclaration": 98,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 198,
                                          "type": "struct PetFactory.PetInfo memory",
                                          "value": "pi"
                                        },
                                        "id": 204,
                                        "name": "Identifier",
                                        "src": "1346:2:1"
                                      }
                                    ],
                                    "id": 206,
                                    "name": "MemberAccess",
                                    "src": "1346:11:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "+",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 191,
                                          "type": "uint256",
                                          "value": "time"
                                        },
                                        "id": 207,
                                        "name": "Identifier",
                                        "src": "1360:4:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "363034383030",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 604800",
                                          "value": "604800"
                                        },
                                        "id": 208,
                                        "name": "Literal",
                                        "src": "1367:6:1"
                                      }
                                    ],
                                    "id": 209,
                                    "name": "BinaryOperation",
                                    "src": "1360:13:1"
                                  }
                                ],
                                "id": 210,
                                "name": "Assignment",
                                "src": "1346:27:1"
                              }
                            ],
                            "id": 211,
                            "name": "ExpressionStatement",
                            "src": "1346:27:1"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "delete",
                                  "prefix": true,
                                  "type": "tuple()"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "struct PetFactory.PetInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 103,
                                          "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                          "value": "petList"
                                        },
                                        "id": 212,
                                        "name": "Identifier",
                                        "src": "1394:7:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2412,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 213,
                                            "name": "Identifier",
                                            "src": "1402:3:1"
                                          }
                                        ],
                                        "id": 214,
                                        "name": "MemberAccess",
                                        "src": "1402:10:1"
                                      }
                                    ],
                                    "id": 215,
                                    "name": "IndexAccess",
                                    "src": "1394:19:1"
                                  }
                                ],
                                "id": 216,
                                "name": "UnaryOperation",
                                "src": "1387:26:1"
                              }
                            ],
                            "id": 217,
                            "name": "ExpressionStatement",
                            "src": "1387:26:1"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "struct PetFactory.PetInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "struct PetFactory.PetInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 103,
                                          "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                          "value": "petList"
                                        },
                                        "id": 218,
                                        "name": "Identifier",
                                        "src": "1428:7:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2412,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 219,
                                            "name": "Identifier",
                                            "src": "1436:3:1"
                                          }
                                        ],
                                        "id": 220,
                                        "name": "MemberAccess",
                                        "src": "1436:10:1"
                                      }
                                    ],
                                    "id": 221,
                                    "name": "IndexAccess",
                                    "src": "1428:19:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 198,
                                      "type": "struct PetFactory.PetInfo memory",
                                      "value": "pi"
                                    },
                                    "id": 222,
                                    "name": "Identifier",
                                    "src": "1450:2:1"
                                  }
                                ],
                                "id": 223,
                                "name": "Assignment",
                                "src": "1428:24:1"
                              }
                            ],
                            "id": 224,
                            "name": "ExpressionStatement",
                            "src": "1428:24:1"
                          }
                        ],
                        "id": 225,
                        "name": "Block",
                        "src": "1279:184:1"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 189,
                                      "type": "function ()",
                                      "value": "killPet"
                                    },
                                    "id": 226,
                                    "name": "Identifier",
                                    "src": "1483:7:1"
                                  }
                                ],
                                "id": 227,
                                "name": "FunctionCall",
                                "src": "1483:9:1"
                              }
                            ],
                            "id": 228,
                            "name": "ExpressionStatement",
                            "src": "1483:9:1"
                          }
                        ],
                        "id": 229,
                        "name": "Block",
                        "src": "1469:34:1"
                      }
                    ],
                    "id": 230,
                    "name": "IfStatement",
                    "src": "1268:235:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        232
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "petStatus",
                          "scope": 269,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "string",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "string",
                              "type": "string"
                            },
                            "id": 231,
                            "name": "ElementaryTypeName",
                            "src": "1514:6:1"
                          }
                        ],
                        "id": 232,
                        "name": "VariableDeclaration",
                        "src": "1514:23:1"
                      }
                    ],
                    "id": 233,
                    "name": "VariableDeclarationStatement",
                    "src": "1514:23:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_PetStatus_$92",
                            "typeString": "enum PetFactory.PetStatus"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "petStatus",
                              "referencedDeclaration": 96,
                              "type": "enum PetFactory.PetStatus"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct PetFactory.PetInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 103,
                                      "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                      "value": "petList"
                                    },
                                    "id": 234,
                                    "name": "Identifier",
                                    "src": "1551:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2412,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 235,
                                        "name": "Identifier",
                                        "src": "1559:3:1"
                                      }
                                    ],
                                    "id": 236,
                                    "name": "MemberAccess",
                                    "src": "1559:10:1"
                                  }
                                ],
                                "id": 237,
                                "name": "IndexAccess",
                                "src": "1551:19:1"
                              }
                            ],
                            "id": 238,
                            "name": "MemberAccess",
                            "src": "1551:29:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "Alive",
                              "referencedDeclaration": null,
                              "type": "enum PetFactory.PetStatus"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 92,
                                  "type": "type(enum PetFactory.PetStatus)",
                                  "value": "PetStatus"
                                },
                                "id": 239,
                                "name": "Identifier",
                                "src": "1584:9:1"
                              }
                            ],
                            "id": 240,
                            "name": "MemberAccess",
                            "src": "1584:15:1"
                          }
                        ],
                        "id": 241,
                        "name": "BinaryOperation",
                        "src": "1551:48:1"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "string memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 232,
                                      "type": "string memory",
                                      "value": "petStatus"
                                    },
                                    "id": 242,
                                    "name": "Identifier",
                                    "src": "1615:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "416c697665",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"Alive\"",
                                      "value": "Alive"
                                    },
                                    "id": 243,
                                    "name": "Literal",
                                    "src": "1627:7:1"
                                  }
                                ],
                                "id": 244,
                                "name": "Assignment",
                                "src": "1615:19:1"
                              }
                            ],
                            "id": 245,
                            "name": "ExpressionStatement",
                            "src": "1615:19:1"
                          }
                        ],
                        "id": 246,
                        "name": "Block",
                        "src": "1601:44:1"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "string memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 232,
                                      "type": "string memory",
                                      "value": "petStatus"
                                    },
                                    "id": 247,
                                    "name": "Identifier",
                                    "src": "1665:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "44656164",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"Dead\"",
                                      "value": "Dead"
                                    },
                                    "id": 248,
                                    "name": "Literal",
                                    "src": "1677:6:1"
                                  }
                                ],
                                "id": 249,
                                "name": "Assignment",
                                "src": "1665:18:1"
                              }
                            ],
                            "id": 250,
                            "name": "ExpressionStatement",
                            "src": "1665:18:1"
                          }
                        ],
                        "id": 251,
                        "name": "Block",
                        "src": "1651:43:1"
                      }
                    ],
                    "id": 252,
                    "name": "IfStatement",
                    "src": "1547:147:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 83,
                              "type": "function (address,uint256,string memory,uint256)",
                              "value": "LogPetFeed"
                            },
                            "id": 253,
                            "name": "Identifier",
                            "src": "1709:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2412,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 254,
                                "name": "Identifier",
                                "src": "1720:3:1"
                              }
                            ],
                            "id": 255,
                            "name": "MemberAccess",
                            "src": "1720:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "petId",
                              "referencedDeclaration": 94,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct PetFactory.PetInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 103,
                                      "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                      "value": "petList"
                                    },
                                    "id": 256,
                                    "name": "Identifier",
                                    "src": "1732:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2412,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 257,
                                        "name": "Identifier",
                                        "src": "1740:3:1"
                                      }
                                    ],
                                    "id": 258,
                                    "name": "MemberAccess",
                                    "src": "1740:10:1"
                                  }
                                ],
                                "id": 259,
                                "name": "IndexAccess",
                                "src": "1732:19:1"
                              }
                            ],
                            "id": 260,
                            "name": "MemberAccess",
                            "src": "1732:25:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 232,
                              "type": "string memory",
                              "value": "petStatus"
                            },
                            "id": 261,
                            "name": "Identifier",
                            "src": "1759:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "nextFeed",
                              "referencedDeclaration": 98,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct PetFactory.PetInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 103,
                                      "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                      "value": "petList"
                                    },
                                    "id": 262,
                                    "name": "Identifier",
                                    "src": "1770:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2412,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 263,
                                        "name": "Identifier",
                                        "src": "1778:3:1"
                                      }
                                    ],
                                    "id": 264,
                                    "name": "MemberAccess",
                                    "src": "1778:10:1"
                                  }
                                ],
                                "id": 265,
                                "name": "IndexAccess",
                                "src": "1770:19:1"
                              }
                            ],
                            "id": 266,
                            "name": "MemberAccess",
                            "src": "1770:28:1"
                          }
                        ],
                        "id": 267,
                        "name": "FunctionCall",
                        "src": "1709:90:1"
                      }
                    ],
                    "id": 268,
                    "name": "EmitStatement",
                    "src": "1704:95:1"
                  }
                ],
                "id": 269,
                "name": "Block",
                "src": "1257:550:1"
              }
            ],
            "id": 270,
            "name": "FunctionDefinition",
            "src": "1222:585:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "checkPetInfo",
              "scope": 335,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 271,
                "name": "ParameterList",
                "src": "1834:2:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "petStatus",
                      "scope": 334,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 272,
                        "name": "ElementaryTypeName",
                        "src": "1853:6:1"
                      }
                    ],
                    "id": 273,
                    "name": "VariableDeclaration",
                    "src": "1853:23:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "nextFeed",
                      "scope": 334,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 274,
                        "name": "ElementaryTypeName",
                        "src": "1878:4:1"
                      }
                    ],
                    "id": 275,
                    "name": "VariableDeclaration",
                    "src": "1878:13:1"
                  }
                ],
                "id": 276,
                "name": "ParameterList",
                "src": "1852:40:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "nextFeed",
                              "referencedDeclaration": 98,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct PetFactory.PetInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 103,
                                      "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                      "value": "petList"
                                    },
                                    "id": 277,
                                    "name": "Identifier",
                                    "src": "1907:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2412,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 278,
                                        "name": "Identifier",
                                        "src": "1915:3:1"
                                      }
                                    ],
                                    "id": 279,
                                    "name": "MemberAccess",
                                    "src": "1915:10:1"
                                  }
                                ],
                                "id": 280,
                                "name": "IndexAccess",
                                "src": "1907:19:1"
                              }
                            ],
                            "id": 281,
                            "name": "MemberAccess",
                            "src": "1907:28:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2402,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 282,
                                "name": "Identifier",
                                "src": "1938:5:1"
                              }
                            ],
                            "id": 283,
                            "name": "MemberAccess",
                            "src": "1938:15:1"
                          }
                        ],
                        "id": 284,
                        "name": "BinaryOperation",
                        "src": "1907:46:1"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 189,
                                      "type": "function ()",
                                      "value": "killPet"
                                    },
                                    "id": 285,
                                    "name": "Identifier",
                                    "src": "1970:7:1"
                                  }
                                ],
                                "id": 286,
                                "name": "FunctionCall",
                                "src": "1970:9:1"
                              }
                            ],
                            "id": 287,
                            "name": "ExpressionStatement",
                            "src": "1970:9:1"
                          }
                        ],
                        "id": 288,
                        "name": "Block",
                        "src": "1956:34:1"
                      }
                    ],
                    "id": 289,
                    "name": "IfStatement",
                    "src": "1903:87:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_PetStatus_$92",
                            "typeString": "enum PetFactory.PetStatus"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "petStatus",
                              "referencedDeclaration": 96,
                              "type": "enum PetFactory.PetStatus"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct PetFactory.PetInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 103,
                                      "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                      "value": "petList"
                                    },
                                    "id": 290,
                                    "name": "Identifier",
                                    "src": "2005:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2412,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 291,
                                        "name": "Identifier",
                                        "src": "2013:3:1"
                                      }
                                    ],
                                    "id": 292,
                                    "name": "MemberAccess",
                                    "src": "2013:10:1"
                                  }
                                ],
                                "id": 293,
                                "name": "IndexAccess",
                                "src": "2005:19:1"
                              }
                            ],
                            "id": 294,
                            "name": "MemberAccess",
                            "src": "2005:29:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "Alive",
                              "referencedDeclaration": null,
                              "type": "enum PetFactory.PetStatus"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 92,
                                  "type": "type(enum PetFactory.PetStatus)",
                                  "value": "PetStatus"
                                },
                                "id": 295,
                                "name": "Identifier",
                                "src": "2038:9:1"
                              }
                            ],
                            "id": 296,
                            "name": "MemberAccess",
                            "src": "2038:15:1"
                          }
                        ],
                        "id": 297,
                        "name": "BinaryOperation",
                        "src": "2005:48:1"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "string memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 273,
                                      "type": "string memory",
                                      "value": "petStatus"
                                    },
                                    "id": 298,
                                    "name": "Identifier",
                                    "src": "2069:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "416c697665",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"Alive\"",
                                      "value": "Alive"
                                    },
                                    "id": 299,
                                    "name": "Literal",
                                    "src": "2081:7:1"
                                  }
                                ],
                                "id": 300,
                                "name": "Assignment",
                                "src": "2069:19:1"
                              }
                            ],
                            "id": 301,
                            "name": "ExpressionStatement",
                            "src": "2069:19:1"
                          }
                        ],
                        "id": 302,
                        "name": "Block",
                        "src": "2055:44:1"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "string memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 273,
                                      "type": "string memory",
                                      "value": "petStatus"
                                    },
                                    "id": 303,
                                    "name": "Identifier",
                                    "src": "2119:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "44656164",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"Dead\"",
                                      "value": "Dead"
                                    },
                                    "id": 304,
                                    "name": "Literal",
                                    "src": "2131:6:1"
                                  }
                                ],
                                "id": 305,
                                "name": "Assignment",
                                "src": "2119:18:1"
                              }
                            ],
                            "id": 306,
                            "name": "ExpressionStatement",
                            "src": "2119:18:1"
                          }
                        ],
                        "id": 307,
                        "name": "Block",
                        "src": "2105:43:1"
                      }
                    ],
                    "id": 308,
                    "name": "IfStatement",
                    "src": "2001:147:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 73,
                              "type": "function (address,uint256,string memory,uint256)",
                              "value": "LogPetCheck"
                            },
                            "id": 309,
                            "name": "Identifier",
                            "src": "2163:11:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2412,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 310,
                                "name": "Identifier",
                                "src": "2175:3:1"
                              }
                            ],
                            "id": 311,
                            "name": "MemberAccess",
                            "src": "2175:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "petId",
                              "referencedDeclaration": 94,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct PetFactory.PetInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 103,
                                      "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                      "value": "petList"
                                    },
                                    "id": 312,
                                    "name": "Identifier",
                                    "src": "2187:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2412,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 313,
                                        "name": "Identifier",
                                        "src": "2195:3:1"
                                      }
                                    ],
                                    "id": 314,
                                    "name": "MemberAccess",
                                    "src": "2195:10:1"
                                  }
                                ],
                                "id": 315,
                                "name": "IndexAccess",
                                "src": "2187:19:1"
                              }
                            ],
                            "id": 316,
                            "name": "MemberAccess",
                            "src": "2187:25:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 273,
                              "type": "string memory",
                              "value": "petStatus"
                            },
                            "id": 317,
                            "name": "Identifier",
                            "src": "2214:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "nextFeed",
                              "referencedDeclaration": 98,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct PetFactory.PetInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 103,
                                      "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                      "value": "petList"
                                    },
                                    "id": 318,
                                    "name": "Identifier",
                                    "src": "2225:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2412,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 319,
                                        "name": "Identifier",
                                        "src": "2233:3:1"
                                      }
                                    ],
                                    "id": 320,
                                    "name": "MemberAccess",
                                    "src": "2233:10:1"
                                  }
                                ],
                                "id": 321,
                                "name": "IndexAccess",
                                "src": "2225:19:1"
                              }
                            ],
                            "id": 322,
                            "name": "MemberAccess",
                            "src": "2225:28:1"
                          }
                        ],
                        "id": 323,
                        "name": "FunctionCall",
                        "src": "2163:91:1"
                      }
                    ],
                    "id": 324,
                    "name": "EmitStatement",
                    "src": "2158:96:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 276
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(string memory,uint256)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 273,
                              "type": "string memory",
                              "value": "petStatus"
                            },
                            "id": 325,
                            "name": "Identifier",
                            "src": "2272:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "nextFeed",
                              "referencedDeclaration": 98,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct PetFactory.PetInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 103,
                                      "type": "mapping(address => struct PetFactory.PetInfo storage ref)",
                                      "value": "petList"
                                    },
                                    "id": 326,
                                    "name": "Identifier",
                                    "src": "2283:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2412,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 327,
                                        "name": "Identifier",
                                        "src": "2291:3:1"
                                      }
                                    ],
                                    "id": 328,
                                    "name": "MemberAccess",
                                    "src": "2291:10:1"
                                  }
                                ],
                                "id": 329,
                                "name": "IndexAccess",
                                "src": "2283:19:1"
                              }
                            ],
                            "id": 330,
                            "name": "MemberAccess",
                            "src": "2283:28:1"
                          }
                        ],
                        "id": 331,
                        "name": "TupleExpression",
                        "src": "2271:41:1"
                      }
                    ],
                    "id": 332,
                    "name": "Return",
                    "src": "2264:48:1"
                  }
                ],
                "id": 333,
                "name": "Block",
                "src": "1893:426:1"
              }
            ],
            "id": 334,
            "name": "FunctionDefinition",
            "src": "1813:506:1"
          }
        ],
        "id": 335,
        "name": "ContractDefinition",
        "src": "48:2279:1"
      }
    ],
    "id": 336,
    "name": "SourceUnit",
    "src": "0:2726:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x2c4a6eff40f9d8bf60e810b3fe9d04d04129f1709a81258e39ad37853506ddba": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "petOwner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "petId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "status",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "nextFeed",
              "type": "uint256"
            }
          ],
          "name": "LogPetCheck",
          "type": "event"
        },
        "0xab587e93f23e040327a56fd9c63f664219691ca00ff28da02aadd7626e8633b0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "petOwner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "petId",
              "type": "uint256"
            }
          ],
          "name": "LogPetFeed",
          "type": "event"
        },
        "0xc7cb82d5133a2788415f44f10e76bfef4baa8831d9f95f5a337c44b802688cbf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "petOwner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "petId",
              "type": "uint256"
            }
          ],
          "name": "LogPetGenerate",
          "type": "event"
        },
        "0xd2507c3f9a0d73a6713846219375cac2664b9201fb1780e2a27d39c01223216c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "petOwner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "petId",
              "type": "uint256"
            }
          ],
          "name": "LogPetKill",
          "type": "event"
        },
        "0xce1456982675bcaf40444baac5eeb2b2ca9a1ba826666336cc59e17ffb3c8e1d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "petOwner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "petId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "nextFeed",
              "type": "uint256"
            }
          ],
          "name": "LogPetFeed",
          "type": "event"
        },
        "0x74e7ea84d3b7bbe97190375606731dea28e96c3e17407efe45f2604c46e6b35a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "petOwner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "petId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "status",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "nextFeed",
              "type": "uint256"
            }
          ],
          "name": "LogPetFeed",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x03E0095AAa73c400793c791777f8Ad2631836B62",
      "transactionHash": "0x9750c6d243b7ca6da00afde940d5db4c849e0a8bcbdbdc8fb79587b0ce4c528b"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-14T05:01:49.945Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeMint(address,uint256)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "safeMint(address,uint256,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "_data": "bytes data to send along with a safe transfer check.",
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}